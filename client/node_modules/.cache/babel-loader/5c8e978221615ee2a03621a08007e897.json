{"ast":null,"code":"var _jsxFileName = \"/Users/Sonia/Projets/sghabi.me/client/src/Icon.js\";\nimport React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\nimport PdfReader from \"./PdfReader\";\nimport \"./style/Icon.css\";\nimport ImgReader from \"./ImgReader\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reader: false\n    };\n    this.map = {\n      pdf: {\n        path: \"/ressources/icons/pdf.png\",\n        component: React.createElement(PdfReader, {\n          url: this.props.url,\n          onClose: () => this.closeReader(),\n          name: this.props.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        })\n      },\n      jpg: {\n        path: \"/ressources/icons/jpg.png\",\n        component: React.createElement(ImgReader, {\n          url: this.props.url,\n          onClose: () => this.closeReader(),\n          name: this.props.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        })\n      }\n    }; // Bind \"this\"\n\n    this.openReader = this.openReader.bind(this);\n    this.closeReader = this.closeReader.bind(this);\n  }\n\n  openReader() {\n    this.setState({\n      reader: true\n    });\n  }\n\n  closeReader() {\n    this.setState({\n      reader: false\n    });\n  }\n\n  render() {\n    const icon = this.map[this.props.type];\n    if (icon == null) return React.createElement(React.Fragment, null);\n    return React.createElement(React.Fragment, null, React.createElement(Draggable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"iconImg\",\n      src: icon.path,\n      draggable: \"false\",\n      onDoubleClick: () => this.openReader(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"iconTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.name))), this.state.reader && icon.component);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sonia/Projets/sghabi.me/client/src/Icon.js"],"names":["React","Component","Draggable","PdfReader","ImgReader","constructor","props","state","reader","map","pdf","path","component","url","closeReader","name","jpg","openReader","bind","setState","render","icon","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,cAAcH,SAAd,CAAwB;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAIA,SAAKC,GAAL,GAAW;AACTC,MAAAA,GAAG,EAAE;AACHC,QAAAA,IAAI,EAAE,2BADH;AAEHC,QAAAA,SAAS,EACP,oBAAC,SAAD;AACE,UAAA,GAAG,EAAE,KAAKN,KAAL,CAAWO,GADlB;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,EAFjB;AAGE,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHC,OADI;AAWTC,MAAAA,GAAG,EAAE;AACHL,QAAAA,IAAI,EAAE,2BADH;AAEHC,QAAAA,SAAS,EACP,oBAAC,SAAD;AACE,UAAA,GAAG,EAAE,KAAKN,KAAL,CAAWO,GADlB;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,EAFjB;AAGE,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHC;AAXI,KAAX,CAPiB,CA8BjB;;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKJ,WAAL,GAAmB,KAAKA,WAAL,CAAiBI,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACX,SAAKE,QAAL,CAAc;AAAEX,MAAAA,MAAM,EAAE;AAAV,KAAd;AACD;;AAEDM,EAAAA,WAAW,GAAG;AACZ,SAAKK,QAAL,CAAc;AAAEX,MAAAA,MAAM,EAAE;AAAV,KAAd;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKZ,GAAL,CAAS,KAAKH,KAAL,CAAWgB,IAApB,CAAb;AACA,QAAID,IAAI,IAAI,IAAZ,EAAkB,OAAO,yCAAP;AAClB,WACE,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,GAAG,EAAEA,IAAI,CAACV,IAFZ;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,aAAa,EAAE,MAAM,KAAKM,UAAL,EAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKX,KAAL,CAAWS,IAArC,CAPF,CADF,CADF,EAYG,KAAKR,KAAL,CAAWC,MAAX,IAAqBa,IAAI,CAACT,SAZ7B,CADF;AAgBD;;AA/DoC","sourcesContent":["import React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\nimport PdfReader from \"./PdfReader\";\nimport \"./style/Icon.css\";\nimport ImgReader from \"./ImgReader\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reader: false\n    };\n\n    this.map = {\n      pdf: {\n        path: \"/ressources/icons/pdf.png\",\n        component: (\n          <PdfReader\n            url={this.props.url}\n            onClose={() => this.closeReader()}\n            name={this.props.name}\n          />\n        )\n      },\n      jpg: {\n        path: \"/ressources/icons/jpg.png\",\n        component: (\n          <ImgReader\n            url={this.props.url}\n            onClose={() => this.closeReader()}\n            name={this.props.name}\n          />\n        )\n      }\n    };\n\n    // Bind \"this\"\n    this.openReader = this.openReader.bind(this);\n    this.closeReader = this.closeReader.bind(this);\n  }\n\n  openReader() {\n    this.setState({ reader: true });\n  }\n\n  closeReader() {\n    this.setState({ reader: false });\n  }\n\n  render() {\n    const icon = this.map[this.props.type];\n    if (icon == null) return <></>;\n    return (\n      <>\n        <Draggable>\n          <div class=\"icon\">\n            <img\n              className=\"iconImg\"\n              src={icon.path}\n              draggable=\"false\"\n              onDoubleClick={() => this.openReader()}\n            />\n            <p className=\"iconTitle\">{this.props.name}</p>\n          </div>\n        </Draggable>\n        {this.state.reader && icon.component}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}