{"ast":null,"code":"var _jsxFileName = \"/Users/Sonia/Projets/sghabi.me/client/src/PdfReader.js\";\nimport React, { Component } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport Draggable from \"react-draggable\";\nimport Window from \"./Window.js\";\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDocumentLoadSuccess = ({\n      numPages\n    }) => {\n      this.setState({\n        numPages\n      });\n    };\n\n    this.state = {\n      numPages: null,\n      pageNumber: 1\n    }; // Bind \"this\"\n\n    this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n    this.paginate = this.paginate.bind(this);\n  }\n\n  paginate() {\n    let pages = [];\n\n    for (let i = 0; i < numPages; i++) {\n      pages.push(React.createElement(Page, {\n        pageNumber: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n\n    return pages;\n  }\n\n  render() {\n    const _this$state = this.state,\n          pageNumber = _this$state.pageNumber,\n          numPages = _this$state.numPages;\n    return React.createElement(Draggable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Window, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Document, {\n      file: this.props.url,\n      onLoadSuccess: this.onDocumentLoadSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.paginate())));\n  }\n\n}","map":{"version":3,"sources":["/Users/Sonia/Projets/sghabi.me/client/src/PdfReader.js"],"names":["React","Component","pdfjs","Document","Page","Draggable","Window","GlobalWorkerOptions","workerSrc","version","constructor","props","onDocumentLoadSuccess","numPages","setState","state","pageNumber","bind","paginate","pages","i","push","render","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,WAAtC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEAJ,KAAK,CAACK,mBAAN,CAA0BC,SAA1B,qDACEN,KAAK,CAACO,OADR;AAIA,eAAe,cAAcR,SAAd,CAAwB;AACrCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,qBAZmB,GAYK,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACxC,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAdkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAE,IADC;AAEXG,MAAAA,UAAU,EAAE;AAFD,KAAb,CAFiB,CAOjB;;AACA,SAAKJ,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BK,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAMDC,EAAAA,QAAQ,GAAG;AACT,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAApB,EAA8BO,CAAC,EAA/B,EAAmC;AACjCD,MAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAED,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD;;AACD,WAAOD,KAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKP,KAD/B;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaH,QADb,eACaA,QADb;AAGP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWY,GADnB;AAEE,MAAA,aAAa,EAAE,KAAKX,qBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKM,QAAL,EAJH,CADF,CADF,CADF;AAYD;;AAxCoC","sourcesContent":["import React, { Component } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport Draggable from \"react-draggable\";\nimport Window from \"./Window.js\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${\n  pdfjs.version\n}/pdf.worker.js`;\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numPages: null,\n      pageNumber: 1\n    };\n\n    // Bind \"this\"\n    this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n    this.paginate = this.paginate.bind(this);\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  };\n\n  paginate() {\n    let pages = [];\n    for (let i = 0; i < numPages; i++) {\n      pages.push(<Page pageNumber={i} />);\n    }\n    return pages;\n  }\n\n  render() {\n    const { pageNumber, numPages } = this.state;\n\n    return (\n      <Draggable>\n        <Window>\n          <Document\n            file={this.props.url}\n            onLoadSuccess={this.onDocumentLoadSuccess}\n          >\n            {this.paginate()}\n          </Document>\n        </Window>\n      </Draggable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}