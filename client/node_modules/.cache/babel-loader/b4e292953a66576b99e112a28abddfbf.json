{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pullLeft = pullLeft;\nexports.pushCenter = pushCenter;\n\nvar _bezierEasing = require('../../animation/bezierEasing');\n\nvar _bezierEasing2 = _interopRequireDefault(_bezierEasing);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar requestAnimationFrame = void 0;\n\nif (typeof window !== 'undefined') {\n  requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n}\n\nvar startTimestamp = void 0;\nvar duration = 350;\nvar easing = (0, _bezierEasing2.default)(.3, .14, 0, 1);\n\nfunction moveLabel(timestamp, label, start, current, end, cb) {\n  if (start === end) return null;\n  if (!startTimestamp) startTimestamp = timestamp;\n  var progress = 1 - (timestamp - startTimestamp) / duration;\n  if (progress < 0) progress = 0;\n  progress = 1 - easing.get(1 - progress);\n\n  if (start > end) {\n    current = progress * start;\n  } else {\n    current = (1 - progress) * end + start;\n  }\n\n  label.style.left = current + 'px';\n\n  if (start > end && current > end || start < end && current < end) {\n    requestAnimationFrame(function (timestamp) {\n      return moveLabel(timestamp, label, start, current, end);\n    });\n  } else {\n    label.style.left = end + 'px';\n    if (cb) cb();\n  }\n}\n\nfunction animateLabel(label, start, end) {\n  return new Promise(function (resolve) {\n    if (requestAnimationFrame) {\n      requestAnimationFrame(function (timestamp) {\n        return moveLabel(timestamp, label, start, start, end, resolve);\n      });\n    }\n  });\n}\n\nfunction pullLeft(input, label) {\n  startTimestamp = null;\n  var start = label.offsetLeft;\n  input.style.color = 'transparent';\n  label.style.position = 'absolute';\n  setTimeout(function () {\n    animateLabel(label, start, 2);\n    setTimeout(function () {\n      return input.style.color = null;\n    }, 300);\n  }, 10);\n}\n\nfunction pushCenter(input, label) {\n  startTimestamp = null;\n  label.style.position = 'relative';\n  var end = label.offsetLeft;\n  label.style.position = 'absolute';\n  setTimeout(function () {\n    animateLabel(label, 2, end).then(function () {\n      return label.style.position = 'relative';\n    });\n  }, 10);\n}","map":null,"metadata":{},"sourceType":"script"}