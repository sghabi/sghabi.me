{"ast":null,"code":"var _jsxFileName = \"/Users/Sonia/Projets/sghabi.me/client/src/Icon.js\";\nimport React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\nimport PdfReader from \"./PdfReader\";\nimport \"./Icon.css\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pdfReader: false\n    };\n    this.map = {\n      pdf: {\n        path: \"/ressources/icons/pdf.png\",\n        actionOpen: this.openPdfReader,\n        actionClose: this.closePdfReader\n      },\n      jpg: {\n        path: \"/ressources/icons/1600.png\"\n      }\n    }; // Bind \"this\"\n\n    this.openPdfReader = this.openPdfReader.bind(this);\n  }\n\n  openPdfReader() {\n    this.setState({\n      pdfReader: true\n    });\n  }\n\n  closePdfReader() {\n    this.setState({\n      pdfReader: false\n    });\n  }\n\n  render() {\n    const icon = map[this.props.type];\n    return React.createElement(React.Fragment, null, React.createElement(Draggable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icon.path,\n      onClick: () => icon.actionOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.name + \".\" + this.props.type))), this.state.pdfReader && React.createElement(PdfReader, {\n      url: this.props.url,\n      onClose: () => icon.actionClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Sonia/Projets/sghabi.me/client/src/Icon.js"],"names":["React","Component","Draggable","PdfReader","constructor","props","state","pdfReader","map","pdf","path","actionOpen","openPdfReader","actionClose","closePdfReader","jpg","bind","setState","render","icon","type","name","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,YAAP;AAEA,eAAe,cAAcF,SAAd,CAAwB;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAIA,SAAKC,GAAL,GAAW;AACTC,MAAAA,GAAG,EAAE;AACHC,QAAAA,IAAI,EAAE,2BADH;AAEHC,QAAAA,UAAU,EAAE,KAAKC,aAFd;AAGHC,QAAAA,WAAW,EAAE,KAAKC;AAHf,OADI;AAMTC,MAAAA,GAAG,EAAE;AACHL,QAAAA,IAAI,EAAE;AADH;AANI,KAAX,CAPiB,CAkBjB;;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBI,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDJ,EAAAA,aAAa,GAAG;AACd,SAAKK,QAAL,CAAc;AAAEV,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD;;AAEDO,EAAAA,cAAc,GAAG;AACf,SAAKG,QAAL,CAAc;AAAEV,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAGX,GAAG,CAAC,KAAKH,KAAL,CAAWe,IAAZ,CAAhB;AAEA,WACE,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACT,IAAf;AAAqB,MAAA,OAAO,EAAE,MAAMS,IAAI,CAACR,UAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKN,KAAL,CAAWgB,IAAX,GAAkB,GAAlB,GAAwB,KAAKhB,KAAL,CAAWe,IAAvC,CAFF,CADF,CADF,EAOG,KAAKd,KAAL,CAAWC,SAAX,IACC,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWiB,GAA3B;AAAgC,MAAA,OAAO,EAAE,MAAMH,IAAI,CAACN,WAAL,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADF;AAaD;;AA/CoC","sourcesContent":["import React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\nimport PdfReader from \"./PdfReader\";\nimport \"./Icon.css\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pdfReader: false\n    };\n\n    this.map = {\n      pdf: {\n        path: \"/ressources/icons/pdf.png\",\n        actionOpen: this.openPdfReader,\n        actionClose: this.closePdfReader\n      },\n      jpg: {\n        path: \"/ressources/icons/1600.png\"\n      }\n    };\n\n    // Bind \"this\"\n    this.openPdfReader = this.openPdfReader.bind(this);\n  }\n\n  openPdfReader() {\n    this.setState({ pdfReader: true });\n  }\n\n  closePdfReader() {\n    this.setState({ pdfReader: false });\n  }\n\n  render() {\n    const icon = map[this.props.type];\n\n    return (\n      <>\n        <Draggable>\n          <div id=\"all\">\n            <img src={icon.path} onClick={() => icon.actionOpen()} />\n            <p>{this.props.name + \".\" + this.props.type}</p>\n          </div>\n        </Draggable>\n        {this.state.pdfReader && (\n          <PdfReader url={this.props.url} onClose={() => icon.actionClose()} />\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}