{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _dec, _dec2, _class, _class2, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Controls = require('./Controls');\n\nvar _Controls2 = _interopRequireDefault(_Controls);\n\nvar _ = require('./styles/10.11');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _windowFocus = require('../../windowFocus');\n\nvar _windowFocus2 = _interopRequireDefault(_windowFocus);\n\nvar _dimension = require('../../style/dimension');\n\nvar _dimension2 = _interopRequireDefault(_dimension);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TitleBar = (_dec = (0, _dimension2.default)({\n  width: '100%'\n}), _dec2 = (0, _windowFocus2.default)(), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_Component) {\n  _inherits(TitleBar, _Component);\n\n  function TitleBar() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TitleBar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TitleBar.__proto__ || Object.getPrototypeOf(TitleBar)).call.apply(_ref, [this].concat(args))), _this), _this.resize = function () {\n      if (_this.refs.title) {\n        var barRect = _this.refs.element.getBoundingClientRect();\n\n        _this.refs.title.style.overflow = 'visible';\n        _this.refs.title.style.paddingRight = 0;\n        _this.refs.title.style.flexGrow = 0;\n\n        var titleRect = _this.refs.title.getBoundingClientRect();\n\n        _this.refs.title.style.overflow = 'hidden';\n        _this.refs.title.style.flexGrow = 1;\n        var barWidth = barRect.width - 6;\n        var contentWidth = titleRect.width + (_this.props.controls ? 60 : 0);\n        var padding = barWidth - contentWidth;\n        if (padding > 60) padding = 60;\n        _this.refs.title.style.paddingRight = padding + 'px';\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TitleBar, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        titlebarChild: true\n      };\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.resize);\n      this.resize();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.resize);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.resize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          inset = _props.inset,\n          controls = _props.controls,\n          title = _props.title,\n          transparent = _props.transparent,\n          isWindowFocused = _props.isWindowFocused,\n          style = _props.style,\n          props = _objectWithoutProperties(_props, ['children', 'inset', 'controls', 'title', 'transparent', 'isWindowFocused', 'style']);\n\n      delete props.isFullscreen;\n      delete props.onCloseClick;\n      delete props.onMinimizeClick;\n      delete props.onMaximizeClick;\n      delete props.onResizeClick;\n      delete props.disableClose;\n      delete props.disableMinimize;\n      delete props.disableResize;\n      delete props.disableFullscreen;\n\n      var componentStyle = _extends({}, _2.default.titleBar);\n\n      var titleStyle = _2.default.title;\n\n      if (inset) {\n        componentStyle = _extends({}, componentStyle, _2.default.titleBarInset);\n      }\n\n      if (!isWindowFocused) {\n        componentStyle = _extends({}, componentStyle, _2.default.unfocusedTitleBar);\n        titleStyle = _extends({}, titleStyle, _2.default.unfocusedTitle);\n      }\n\n      controls = !controls || _react2.default.createElement(_Controls2.default, _extends({\n        ref: 'controls',\n        inset: inset\n      }, this.props));\n      title = !title || _react2.default.createElement('div', {\n        ref: 'title',\n        style: titleStyle\n      }, title);\n\n      if (transparent) {\n        delete componentStyle.backgroundImage;\n        delete componentStyle.borderBottomWidth;\n        delete componentStyle.borderBottomStyle;\n        delete componentStyle.borderBottomColor;\n        delete componentStyle.borderTopWidth;\n        delete componentStyle.borderTopStyle;\n        delete componentStyle.borderTopColor;\n        delete componentStyle.borderTopLeftRadius;\n        delete componentStyle.borderTopRightRadius;\n      }\n\n      return _react2.default.createElement('div', _extends({\n        ref: 'element',\n        style: _extends({}, componentStyle, style)\n      }, props), controls, title, children);\n    }\n  }]);\n\n  return TitleBar;\n}(_react.Component), _class2.propTypes = _extends({}, _dimension.dimensionPropTypes, {\n  title: _propTypes2.default.node,\n  inset: _propTypes2.default.bool,\n  controls: _propTypes2.default.bool,\n  transparent: _propTypes2.default.bool,\n  isFullscreen: _propTypes2.default.bool,\n  onCloseClick: _propTypes2.default.func,\n  onMinimizeClick: _propTypes2.default.func,\n  onMaximizeClick: _propTypes2.default.func,\n  onResizeClick: _propTypes2.default.func,\n  disableClose: _propTypes2.default.bool,\n  disableMinimize: _propTypes2.default.bool,\n  disableResize: _propTypes2.default.bool,\n  disableFullscreen: _propTypes2.default.bool\n}), _class2.childContextTypes = {\n  titlebarChild: _propTypes2.default.bool\n}, _temp2)) || _class) || _class);\nexports.default = TitleBar;","map":null,"metadata":{},"sourceType":"script"}